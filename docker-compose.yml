version: '3.8' # syntax moderna e com recursos mais recentes do docker compose

services:
  app: 
    build: . # Constroi a imagem da aplicação usando o dockerfile, por padrão ele sempre busca por Dockerfile na pasta atual
    ports:
      - "${PORT}:${PORT}" # Mapeia a porta 3000 do host para a 3000 do conteiner
    environment:
      PORT: ${PORT} # A variável é injetada no contêiner 'app'
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    command: ./wait-for-it.sh db npm run dev # aguarda o banco de dados ficar 100% pronto para executar (sem isso pode dar erro de tentar executar o banco sem ele ter sido iniciado ainda)
    depends_on:
      - db # garante que o conteiner 'db' seja iniciado antes do 'app'

  db:
    image: postgres:latest # Imagem oficial do postgres do docker hub
    restart: always # se o conteiner parar de funcionar por qualquer motivo, tenta iniciar novamente
    environment: 
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} # senha definida no database.js [ usando a senha do .env ]
      POSTGRES_DB: ${POSTGRES_DB} # nome do banco de dados definido no databse.js
    volumes:
      - ./postgres-data:/var/lib/postgresql/data # persiste os dados em uma pasta local
    ports:
      - "5433:5432" # mapeia a porta 5432 do host para a 5432 do conteiner